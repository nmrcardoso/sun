
#ifndef WL_FUNC_H
#define WL_FUNC_H



namespace CULQCD{

//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
/////      Calculate Sigma_g^+ states (4 for now)/////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
enum state_symmetry{
	sigma_g_plus,//0
	sigma_g_minus,//1
	sigma_u_plus,//2
	sigma_u_minus,//3
	pi_g, //4
	pi_u,//5
	delta_g,//6 
	delta_u//7
};
template<class Real>
class symmetry_sector{
	public:
		int Rmax;
		int Tmax;
		int opN;
		int totalOpN;
		int symmetry;//Alireza added
		complex *wloop;
		complex *wloop_h;
		size_t wloop_size;
		//Store all space line components
		gauge fieldOp;
	symmetry_sector(const int _Rmax, const int _Tmax,const int _opN, int sym);
	~symmetry_sector();
};


///////////////////////////////////////////////////////
// Calculate the 4 types of space Wilson lines for a give radius and direction mu
template<class Real>
void CalcWLOPs_A0(gauge array, symmetry_sector<Real> *arg, int radius, int mu);

// Calculate the Wilson loop for 4 operators for a give radius and direction mu
template<class Real>
void CalcWilsonLoop_A0(gauge array, symmetry_sector<Real> *arg, int radius, int mu);






//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
///////////  OLD CODE........................... /////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////





extern __constant__	int	 	DEV_Ops[2];
extern __constant__	int	 	DEV_OpComps[8];
extern __constant__	int	 	DEV_OpPos[8];

template<class Real>
void CalcWilsonLoop_dg(gauge array, gauge fieldOp, Real *wloop, int radius, int Tmax, int mu, int opN);

template<class Real>
void CalcWLOPs_dg_33(gauge array, gauge fieldOp, int radius, int mu, int opN);

}








#endif

